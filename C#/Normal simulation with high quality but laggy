using UnityEngine;
using UnityEngine.UI;
using OpenCvSharp;

public class RealTimeWebcamDisplay : MonoBehaviour
{
    public RawImage displayImage; // Assign in Unity Inspector (UI RawImage)
    public GameObject webcamCube; // Assign in Unity Inspector (3D Cube)
    public Button startButton; // Assign in Unity Inspector (Start Button)
    public Camera mainCamera; // Assign in Unity Inspector (Main Camera)

    private WebCamTexture webcamTexture;
    private Renderer cubeRenderer;
    private Texture2D outputTexture;
    private Mat frameMat;
    private bool effectActive = false;

    void Start()
    {
        if (startButton == null)
        {
            startButton = GameObject.Find("StartButton").GetComponent<Button>(); // Auto-find the button
        }

        if (startButton != null)
        {
            startButton.onClick.AddListener(OnStartButtonClick);
        }
        else
        {
            Debug.LogError("Start Button is still missing! Check Hierarchy.");
        }

        if (mainCamera == null)
        {
            mainCamera = Camera.main; // Default to the main camera if not assigned
        }
    }

    void OnStartButtonClick()
    {
        if (!effectActive)
        {
            StartWebcamDisplay();
            effectActive = true;

            // Hide UI elements for immersion
            startButton.gameObject.SetActive(false); // Hide Start Button
        }
    }

    void StartWebcamDisplay()
    {
        WebCamDevice[] devices = WebCamTexture.devices;
        webcamTexture = new WebCamTexture(devices.Length > 1 ? devices[1].name : devices[0].name);

        // Set webcam resolution for higher quality
        webcamTexture.requestedWidth = 1920; // Adjust this to increase the resolution
        webcamTexture.requestedHeight = 1080;
        webcamTexture.Play();

        outputTexture = new Texture2D(webcamTexture.width, webcamTexture.height, TextureFormat.RGBA32, false);

        if (webcamCube != null)
        {
            cubeRenderer = webcamCube.GetComponent<Renderer>();
            cubeRenderer.material.SetTexture("_BaseMap", outputTexture);
        }

        // Pre-allocate Mat
        frameMat = new Mat(webcamTexture.height, webcamTexture.width, MatType.CV_8UC3);

        effectActive = true;

        // Adjust camera settings for better quality and fix zoom
        AdjustCameraSettings();
    }

    void AdjustCameraSettings()
    {
        if (mainCamera != null)
        {
            // Adjust the camera's Field of View (FOV) to prevent zooming
            mainCamera.fieldOfView = 90; // You can adjust this value as needed

            // Set the Near and Far Clip Planes to avoid clipping
            mainCamera.nearClipPlane = 0.1f;
            mainCamera.farClipPlane = 1000f;
        }
    }

    void Update()
    {
        if (effectActive && webcamTexture.didUpdateThisFrame)
        {
            ProcessFrame();
        }
    }

    void ProcessFrame()
    {
        // Convert webcam image to texture
        var colors = webcamTexture.GetPixels32();
        outputTexture.SetPixels32(colors);
        outputTexture.Apply();

        // Convert to OpenCV Mat and immediately back to Texture2D (no blur)
        frameMat = OpenCvSharp.Unity.TextureToMat(outputTexture);
        OpenCvSharp.Unity.MatToTexture(frameMat, outputTexture);

        // Apply texture to cube
        if (webcamCube != null)
            cubeRenderer.material.SetTexture("_BaseMap", outputTexture);
    }
}
