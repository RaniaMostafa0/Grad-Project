import cv2
import numpy as np

# Function to process video and apply Canny edge detection
def process_video(input_path, output_path=None):
    # Open the video file
    cap = cv2.VideoCapture(input_path)
    
    # Check if video opened successfully
    if not cap.isOpened():
        print("Error: Could not open video.")
        return
    
    # Get video properties
    frame_width = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH))
    frame_height = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))
    fps = int(cap.get(cv2.CAP_PROP_FPS))
    
    # Define the codec and create VideoWriter object if output_path is provided
    if output_path:
        fourcc = cv2.VideoWriter_fourcc(*'XVID')  # Codec for .avi files
        out = cv2.VideoWriter(output_path, fourcc, fps, (frame_width, frame_height), isColor=False)
    else:
        out = None
    
    print(f"Processing video: {input_path}")
    print(f"Frame size: {frame_width}x{frame_height}, FPS: {fps}")
    
    # Loop through each frame
    while cap.isOpened():
        ret, frame = cap.read()
        
        # Break the loop if no more frames
        if not ret:
            print("End of video reached.")
            break
        
        # Convert frame to grayscale (Canny works on single-channel images)
        gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
        
        # Apply Canny edge detection
        # Parameters: image, threshold1 (lower), threshold2 (upper)
        edges = cv2.Canny(gray, 50, 250)
        
        # Display the result
        cv2.imshow('Canny Edge Detection', edges)
        
        # Write the frame to the output video if specified
        if out:
            out.write(edges)
        
        # Press 'q' to quit early
        if cv2.waitKey(1) & 0xFF == ord('q'):
            print("Stopped by user.")
            break
    
    # Release resources
    cap.release()
    if out:
        out.release()
    cv2.destroyAllWindows()
    print("Processing complete.")

# Example usage
if __name__ == "__main__":
    # Specify the input video file path
    input_video = r"C:\Users\pc\Downloads\WhatsApp Video 2024-11-30 at 23.04.32_ebe3b33d.mp4"  # Replace with your video file path
    
    # Optionally specify an output video file path
    output_video = r"C:\Users\pc\Downloads\Canny.mp4"  # Set to None if you don't want to save
    
    # Process the video
    process_video(input_video, output_video)
