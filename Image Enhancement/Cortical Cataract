import cv2
import numpy as np

def apply_gamma_correction(img, gamma):
    """
    Applies gamma correction to the input image using a lookup table.
    """
    look_up = np.array([((i / 255.0) ** gamma) * 255 for i in range(256)]).astype("uint8")
    return cv2.LUT(img, look_up)

# Load image
image_path = r"Videos\a5e93896-bd0a-446d-8e47-29ee8b84395c.png"
original = cv2.imread(image_path)
if original is None:
    raise ValueError(f"❌ Cannot load image: {image_path}")

# Create window and trackbar
cv2.namedWindow("Gamma Correction", cv2.WINDOW_NORMAL)
cv2.resizeWindow("Gamma Correction", 800, 600)

# Trackbar: 0–200 → gamma ≈ 0.01 to 10 (log scale)
cv2.createTrackbar("Gamma", "Gamma Correction", 100, 200, lambda x: None)

while True:
    slider_val = cv2.getTrackbarPos("Gamma", "Gamma Correction")
    gamma = 10 ** ((slider_val - 100) / 100.0)  # Exponential mapping

    corrected = apply_gamma_correction(original, gamma)

    # Display gamma value on window title
    cv2.imshow("Gamma Correction", corrected)
    cv2.setWindowTitle("Gamma Correction", f"Gamma Correction (γ = {gamma:.2f})")

    key = cv2.waitKey(1)
    if key == 27:  # ESC to exit
        break
    elif key == ord('s'):
        cv2.imwrite("gamma_corrected.jpg", corrected)
        print("✅ Saved as 'gamma_corrected.jpg'")

cv2.destroyAllWindows()
